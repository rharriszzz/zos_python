#!/bin/sh

# https://www.ibm.com/products/open-enterprise-python-zos/pricing
# click on "Try Free Edition"

if [[ "$ENVIRONMENT_IS_CLEAN" != "YES" ]]; then
    keep="HOME=$HOME LOGNAME=$LOGNAME USER=$USER"
    keep="$keep _BPXK_AUTOCVT=ON ENVIRONMENT_IS_CLEAN=YES PATH=$PATH"
    exec /bin/env -i $keep "$0" "$@"
fi

# === edit these lines ===
PYZ=$HOME/pyz
PYZ_PAX=$HOME/HAMB380.runnable.pax.Z

ROCKET_PORTED_TOOLS_MAKE=/rsusr/ported/bin/make

clean='yes'
# === end of lines to edit ===

touch install.log
chtag -t -c 819 install.log
exec > install.log 2>&1
set -x

mkdir -p $PYZ
cd $PYZ

export PATH=/bin
export LIBPATH=/usr/lib
export PYZ_DIR=usr/lpp/IBM/cyp/v3r8/pyz
export PYZ_PREFIX=$PYZ/$PYZ_DIR
export PATH=$PYZ_PREFIX/bin:$PATH
export LIBPATH=$PYZ_PREFIX/lib:$LIBPATH
export _BPXK_AUTOCVT=ON

if [[ "$clean" == "yes" && -d usr ]]; then
    rm -rf usr
fi
if [[ ! -d usr ]]; then
    pax -z -r -f $PYZ_PAX
fi

export CC=/bin/xlclang
export CXX=/bin/xlclang++
# -W'c,DLL' is not needed with xlclang (or with xlc -q64)
CFLAGS=`python3 -c 'import sysconfig; print(sysconfig.get_config_var("CFLAGS"))'  | sed -e "s/-W'c,DLL' //"`
export CFLAGS

pip3 install --verbose certifi
export SSL_CERT_FILE=$PYZ_PREFIX/lib/python3.8/site-packages/certifi/cacert.pem

# I can't get /bin/patch to work, so let's use sed

if [[ 1 == 1 ]]; then
    # https://developer.ibm.com/node/2017/04/09/working-with-modules-and-the-node-js-technical-preview-for-zos/
    export _C89_CCMODE=1
    export _CC_CCMODE=1
    export _CXX_CCMODE=1
else
    unset _C89_CCMODE
    unset _CC_CCMODE
    unset _CXX_CCMODE
    # fix: FSUM3010 Specify a file with the correct suffix (.C, .hh, .i, .c, .i, .s, .o, .x, .p, .I, or .a), or a corresponding data set name, instead of -obuild/lib.os390-27.00-8561-3.8/zmq/libzmq.so.
    f=$PYZ_DIR/lib/python3.8/distutils/unixccompiler.py
    if [[ ! -f $f.save ]]; then
        cp $f $f.save
    fi
    sed \
        -e '/ld_args = (objects + self.objects +/{' \
        -e 'N' \
        -e 'c\
\            ld_args = ([opt for opt in lib_opts if opt.startswith("-L")] +\
\                       ["-o", output_filename] + objects + self.objects +\
\                       [opt for opt in lib_opts if not opt.startswith("-L")])' \
        -e '}' \
        -e '/ld_args.extend(\["-Wl,dll", new_pythonx\])/{' \
        -e 'N' \
        -e 'c\
\                    ld_args.append(new_pythonx)\
\                    ld_args[0:0] = ["-Wl,dll", "-q64"]' \
        -e '}' \
        $f.save > $f
fi

pip3 install --verbose wheel

build_pkg-config
build_libzmq
build_pyzmq
build_zlib
build_jpeg
pip3 install --verbose notebook

# bokeh needs Pillow which needs zlib and jpeg

pip3 install --verbose bokeh
